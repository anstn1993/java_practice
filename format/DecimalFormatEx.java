package format;

import java.text.DecimalFormat;

/**
 * 숫자를 원하는 형식의 문자열로 변환
 *
 * 1234567.89을 변환한다고 했을 때
 *
 * 1. 0: 10진수(빈자리는 0으로 채움)
 *  - 0: 12345678(소수점은 반올림해서 날림)
 *  - 0.0: 1234567.9(둘째자리에서 반올림처리)
 *  - 0000000000.00000: 0001234567.89000(빈자리 0으로)
 *
 * 2. #: 10진수(빈자리 날림)
 *  - #: 12345678(소수점은 반올림해서 날림)
 *  - #.#: 1234567.9(둘째자리에서 반올림처리)
 *  - ##########.#####: 1234567.89(빈자리 날림)
 *
 * 3. .: 소수점
 *  - #.0: 1234567.9
 *
 * 4. -: 음수기호
 *  - +#.0: +1234567.9
 *  - -#.0: -1234567.9
 *
 * 5. ,: 단위 구분
 *  - #,###.0: 1,234,567.9
 *
 * 6. E: 지수문자 0.0E0
 *  - 0.0E0: 1.2E6
 *
 * 7. ;: 양수와 음수의 패턴을 모두 기술할 경우, 패턴 구분
 *  - +#,###;-#,###: +1,234,568(양수일 때), -1,234,568(음수일 때)
 *
 * 8. %: %문자
 *  - #%: 1234568%
 *
 * 9. \u00A4: 통화기호
 *  - \u00A4#,###: ₩1,234,568
 */
public class DecimalFormatEx {
  public static void main(String[] args) {
    double num = 1234567.89;

    DecimalFormat df = new DecimalFormat("#,###");
    System.out.println(df.format(num));

    df = new DecimalFormat("#,###.0");
    System.out.println(df.format(num));
  }
}
